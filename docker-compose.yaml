services:
  nextjs:
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./public/assets:/app/public/assets
    ports:
      - "3000:3000"
    depends_on:
      - db-container
    networks:
      - custom-network

  db-container:
    image: postgres:15
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - ./docker-data/db:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - custom-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER}", "-d", "${DB_DATABASE}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  prisma:
    image: node:18
    working_dir: /app
    volumes:
      - .:/app
    command: >
      sh -c "npm install @prisma/client && npx prisma generate && npx prisma db push && npm run prisma:seed"
    depends_on:
      - db-container
    restart: on-failure
    networks:
      - custom-network

  nginx:
    image: nginx:latest
    restart: always
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl # Mount the SSL certificates
    ports:
      - "80:80"
      - "443:443" # Expose the HTTPS port
    depends_on:
      - nextjs
    networks:
      - custom-network

  coredns:
    image: coredns/coredns:latest
    container_name: coredns
    restart: always
    volumes:
      - ./coredns/Corefile:/Corefile        # Mount the Corefile configuration
      - ./ssl:/etc/coredns/ssl # Mount the SSL certificates
    ports:
      - "53:53/udp"
      - "53:53/tcp"
      - "853:853/tcp"
    networks:
      - custom-network


networks:
  custom-network:
    driver: bridge
